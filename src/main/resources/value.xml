<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"  
	xmlns:jee="http://www.springframework.org/schema/jee" 
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.2.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-3.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	
	<!-- 
		注入基本类型的值
		使用list,set,map,props注入集合类型的值
	 -->
	 <bean id="eb1" class="value.ValueBean">
	 	<property name="name" value="dmetal"/>
	 	<property name="age" value="21"/>
	 	<property name="interest">
	 		<list>
	 			<value>music</value>
	 			<value>cartoon</value>
	 			<value>game</value>
	 		</list>
	 	</property>
	 	<property name="city">
	 		<set>
	 			<value>上海</value>
	 			<value>广州</value>
	 			<value>深圳</value>
	 		</set>
	 	</property>
	 	<property name="score">
	 		<map>
	 			<entry key="英语" value="60"/>
	 			<entry key="math" value="90"/>
	 		</map>
	 	</property>
	 	<property name="db">
	 		<props>
	 			<prop key="username">d</prop>
	 			<prop key="password">a12345</prop>
	 		</props>
	 	</property>
	 </bean>
	
	
	<!-- 
		将集合类型的值当作一个bean来配置
	 -->
	<util:list id="interestBean">
		<value>运动</value>
		<value>跳舞</value>
		<value>唱歌</value>
	</util:list>
	<util:set id="cityBean">
		<value>杭州</value>
		<value>西安</value>
		<value>北京</value>
	</util:set>
	<util:map id="scoreBean">
		<entry key="English" value="70"/>
		<entry key="math" value="90"/>
	</util:map>
	<util:properties id="dbBean">
			<prop key="username">scott</prop>
			<prop key="password">a12345</prop>
	</util:properties>
	<!-- 以引用的方式注入集合类型的值 -->
	 <bean id="eb2" class="value.ValueBean">
	 	<property name="interest" ref="interestBean"/>
	 	<property name="city" ref="cityBean"/>
	 	<property name="score" ref="scoreBean"/>
	 	<property name="db" ref="dbBean"/>
	 </bean>
	 
	 
	 <!-- 
	 	读取.properties文件内容
	 	location属性:指定.properties文件的位置
	 	classpath: 告诉容器使用类路径查找
	 	容器会读取指定位置的文件的内容，并且将这些内容存放到Properties对象里
	  -->
	 <util:properties id="config" location="classpath:config.properties"/>
	 
	 
	 <!-- 
	 	使用spring表达式读取其他bena的属性值
	  -->
	 <bean id="sb1" class="value.SomeBean">
	 	<property name="name" value="#{eb1.name}"/>
	 	<property name="interest" value="#{eb1.interest[0]}"/>
	 	<property name="score" value="#{eb1.score['英语']}"/>
	 	<property name="pageSize" value="#{config['pageSize']}"/>
	 </bean>
	 
	 
	 
	 <util:properties id="db" location="classpath:db.properties"/>
	 <bean id="ds" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
	 	<property name="driverClassName" value="#{db.drivername}"/>
	 	<property name="url" value="#{db.url}"/>
	 	<property name="username" value="#{db.username}"/>
	 	<property name="password" value="#{db.password}"/>
	 	<property name="maxActive" value="#{db.maxactive}"/>
	 	<property name="maxWait" value="#{db.maxwait}"/>
	 </bean>
	 
	 
	 
</beans>